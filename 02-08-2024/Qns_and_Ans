P1. print series 10, 12, 14, 16, ... N terms 
    Q1: use for loop
----plan ps----
[Girish, Anjana NK]
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    for I = 1; I <= numOfTerms ; I++ 
        Print term + ' '
        term = term + 2
    end for 
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)

--------c#-----------------

class Q01
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        for (int I = 1; I <= numOfTerms ; I++)
        {
            Console.Write($"{term} ");
            term = term + 2;
        }
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


-----------------ps-----------------
P1. print series 10, 12, 14, 16, ... N terms 
    Q1: use while looping
[Anjana, Gayathri, Sahla[...mobile joined], Sharon[...], Ashwin, Collin]
----plan ps----
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1
    while  I <= numOfTerms  
        Print term + ' '
        term = term + 2
        I++
    end while 
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)


--------------------c#--------------------------

class Q02
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        while ( I <= numOfTerms  )
        {
            Console.Write($"{term} ");
            term = term + 2;
            I++;
        }
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}

-------------------------------ps-----------

P1. print series 10, 12, 14, 16, ... N terms 
    Q1: use do.while loop
----plan ps----
[Collin, Gladsy, Athulya(mobile / issue in mobile connectivy also),
    Alan Kuriakose[qn]]
function PrintSeries10_12_14(numOfTerms)
function TestPrintSeries10_12_14()
Here, 
    1. PrintSeries10_12_14 -> void, numOfTerms -> int 
    2. TestPrintSeries10_12_14 -> void 
----ps----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1;
    do  
        if numOfTerms == 0
            break
        then   
        Print term + ' '
        term = term + 2

        I++
    end while I <= numOfTerms
function TestPrintSeries10_12_14()
    Input numOfTerms
    PrintSeries10_12_14(numOfTerms)
----ps 2----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1;
    do  
        if numOfTerms < I
            break
        then   
        Print term + ' '
        term = term + 2

        I++
    end while I <= numOfTerms
----ps 2----
function PrintSeries10_12_14(numOfTerms)
    term = 10
    I = 1;
    if numOfTerms > 0
        do          
            Print term + ' '
            term = term + 2

            I++
        end while I <= numOfTerms
    then   
    
--------------------c#----------------------


class Q03
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        do 
        {
            if (0 == numOfTerms)
            {
                break;
            }
            Console.Write($"{term} ");
            term = term + 2;

            I++;
        } while (I <= numOfTerms) ;
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    // input=0, ouput=
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


------------------------ps-------------------------


P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q4: use for loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
[Gladsy, Dijol, Ann Mariya[qn], Keerthana[qn-base cond], Alan Preeth[qn-instead of diff use I], 
Yahkoob[qn-diff doubt], Riza[qn-clarification of N-1 times],
Athula(joined in chat box for discussion),
Kuriakose[doubt/qn]]
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    for I = 1; I <= N ; I++   
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1
    end for 
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm
----ps----
[Alan Preeth]
function GetNthTerm_21_22_24_27(N)    
    term = 21
    
    for I = 1; I <= N ; I++   
        if I == N
            break
        end if         
        //
        term = term + I //difference is I only 
       
    end for 
    return term
----ps----
[Keerthana]
function GetNthTerm_21_22_24_27(N)    
    term = 21
    for I = 1; I < N ; I++ //run N-1 times
        term = term + I        //difference is I only 
    end for 
    return term


----ps----
term = term + I //
term += I       // replace with shorthand assignment [Minnu]
[Minnu]
function GetNthTerm_21_22_24_27(N)    
    term = 21
    for I = 1; I < N ; I++ //run N-1 times
        term += I        //difference is I only 
    end for 
    return term
----cs explained----
static int GetNthTerm_21_22_24_27(int N) //5
{
    int term = 21;  //21 22 24 27 31
    int difference = 1;//1 2 3 4 5
    for (int I = 1; I <= N; I++) //1 2 3 4 5
    {
        if( I == N )
        {
            break;
        }
        //
        term = term + difference;//21+1=22,22+2=24,24+3=27, 27+4=31
        difference = difference + 1;
    }
    return term;
}



-----------------------c#------------------

class Q04
{
    //21_22_24_27_31_36_42_49
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        for (int I = 1; I <= N; I++) 
        {
            if( I == N )
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;
        }
        return term;
    }
    //[Dijol, Aaryaka, Minnu[qn-why ReadLine, why not Read], 
    //Anjana ER[detailed explanation of the code]
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


-----------------------------ps---------------

P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q5: use while loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
[Aaryaka, ]
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    I = 1
    while  I <= N  
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1

        I++ 
    end while 
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm


---------------c#----------------

class Q05
{
    //21_22_24_27_31_36_42_49
    //[Aaryaka, Roshith<networking issue>, Shilpa], 
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        while ( I <= N ) 
        {
            if( I == N )
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        }
        return term;
    }
    
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}


-----------ps-------------------

P2. print the N th term in the series 21, 22, 24, 27, 31, ...
    Q5: use do..while loop
Note: 
    21, 22, 24, 27, 31, ...
      1   2   3   4           diff    
[Shilpa, Gopika, Sarika[qn for N=0]]
----plan ps----
function GetNthTerm_21_22_24_27(N)
function TestGetNthTerm_21_22_24_27()
Here, 
    1. GetNthTerm_21_22_24_27 -> int, N -> int 
    2. TestGetNthTerm_21_22_24_27 -> void 
        N is number of terms 
----ps----
function GetNthTerm_21_22_24_27(N)    
    term = 21
    difference = 1
    I = 1
    do  
        if I == N
            break
        end if         
        //
        term = term + difference
        difference = difference + 1

        I++ 
    while  I <= N  
    return term
function TestGetNthTerm_21_22_24_27()
    Input N                             
    nthTerm = GetNthTerm_21_22_24_27(N)
    Print nthTerm


-------------c#----------------------



class Program
{
    //21_22_24_27_31_36_42_49
    //[Gopika, Ashna], 
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        do
        {
            if (I == N)
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        } while (I <= N);
        return term;
    }
    
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}



---------------ps-----------------


P3. print the following pattern 
        1
      1 2
    1 2 3
  1 2 3 4
1 2 3 4 5 
Here, N = number of lines = 5
    Q7: use for loop
    Q8: use while loop
    Q9: use do..while loop
----plan ps----
[Ashna, Neha, Nivya, Kuriakose[doubt]]
function PrintNumTriangleMirroredRightAngle(N)
function TestPrintNumTriangleMirroredRightAngle()
Here, 1. PrintNumTriangleMirroredRightAngle -> void, N -> int = number of lines 
      2. TestPrintNumTriangleMirroredRightAngle -> void 
----ps----
function PrintNumTriangleMirroredRightAngle(N) = 5
    for I = 1; I <= N; I++          
        for J = 1; J <= N-I; J++     
            Print "  "                 
        end for 
        for J = 1; J <= I; J++       
            Print J + " "           
        end for 
        Print NewLine 
    end for 
function TestPrintNumTriangleMirroredRightAngle()
    Input N 
    PrintNumTriangleMirroredRightAngle(N)
----ps with comments----
function PrintNumTriangleMirroredRightAngle(N)
    for I = 1; I <= N; I++  //N times = Number of Lines
        for J = 1; J <= N-I; J++ //Number of Spaces before Number print
            Print "  " //Two Spaces, No Newline Printing 
        end for 
        for J = 1; J <= I; J++ //Number of Numbers is I times
            Print J + " "      // Print number and space, no new line 
        end for 
        Print NewLine 
    end for 
function TestPrintNumTriangleMirroredRightAngle()
    Input N 
    PrintNumTriangleMirroredRightAngle(N)
----ps explained code----
########1#
######1#2#
####1#2#3#
##1#2#3#4#
1#2#3#4#5#

function PrintNumTriangleMirroredRightAngle(N) = 5
    for I = 1; I <= N; I++          // 1 2 3 4 5[]
        for J = 1; J <= N-I; J++    //    0 times 
            Print "  "              //    
        end for 
        for J = 1; J <= I; J++      //    5 time 
            Print J + " "           //    
        end for 
        Print NewLine 
    end for 
function TestPrintNumTriangleMirroredRightAngle()
    Input N 
    PrintNumTriangleMirroredRightAngle(N)
----cs----

Line No = I               5-I I  
1        ########1#    8#=4##,1num  = 1#      (N-I)##,I nums 
2        ######1#2#    6#=3##,2nums = 1#2#    (N-I)##,I nums
3        ####1#2#3#    4#=2##,3nums = 1#2#3#  (N-I)##,I nums
4        ##1#2#3#4#    2#=1##,4nums = 1#2#3#4#  (N-I)##,I nums
5        1#2#3#4#5#    0#=0##,5nums = 1#2#3#4#5# (N-I)##,I nums

how many lines ? N=5


----------------------c#---------------------


class Q07
{
    //[Ashna, Neha, Nivya, Kuriakose[doubt], Rishwin[discussion], Giris]
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        for(int I = 1; I <= N; I++ )
        { 
            for(int J = 1; J <= N-I; J++)
            {
                Console.Write("  "); //2 spaces
            }
            for(int J = 1; J <= I; J++)
            {
                Console.Write($"{J} ");//num and space
            }
            Console.WriteLine();//new line 
        }
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}







